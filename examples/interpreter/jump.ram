jmp:
    ram labelName :str = ""
    vec labelName = cmd[1]
    jmp get_label_id:
    jmp push_pc_callstack:
    ram pc :int = 0
    copy pc = label_id
    ret

jc_prepare:
   vec stack len
   ram 1
   sub
   ram lx prev
   ram stack_int :int = 0
   vec stack_int = stack[lx]
   copy lx = stack_int
   drop stack_int
   vec stack pop
   ret

je:
    jmp jc_prepare:
    ram 0
    ram lx
    cmp
    je jmp:
    ret

jne:
    jmp jc_prepare:
    ram 0
    ram lx
    cmp
    jne jmp:
    ret

jsm:
    jmp jc_prepare:
    ram -1
    ram lx
    cmp
    je jmp:
    ret

jgr:
    jmp jc_prepare:
    ram 1
    ram lx
    cmp
    je jmp:
    ret

get_label_id:
    ram label_id :int = 0
    get labelMap labelName = label_id
    ram lx 1 
    sub label_id lx
    ram lx prev
    copy label_id = lx
    ret

push_pc_callstack:
    ram lx 1
    add pc lx
    ram lx prev
    copy pc = lx
    vec callstask push pc
    drop pc
    ret

ret:
   ram pc :int = 0
   vec callstask len
   ram 1
   sub
   ram lx prev
   vec pc = callstask[lx]
   vec callstask pop
   copy lx = pc
   ram lx
   ram 1
   sub
   ram lx prev
   copy pc = lx
   ret